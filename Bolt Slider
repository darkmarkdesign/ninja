<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.10.4/gsap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.10.4/Observer.min.js"></script>
<script>

let totalSlides = $(".slider_item").length;
let moveDistance = (totalSlides - 1) * -100;
let popupOpen = true;
let transitioning = false;
let object = {
  value: 0
};
let currSlide = 0;

// prevent drag>click
let mouseDown = false;
let canClickCard = true;
$(document.body)
  .on("mousedown", function () {
    mouseDown = true;
  })
  .on("mousemove", function () {
    canClickCard = !mouseDown;
  })
  .on("mouseup", function () {
    mouseDown = false;
    setTimeout(function () {
      canClickCard = true;
    }, 100);
  });

$(".slidelink.w-inline-block").each(function () {
  $(this).on("click", function (ev) {
    if (!canClickCard) {
      ev.preventDefault();
    }
  });
});

// Small slider
let tl = gsap.timeline({
  paused: true,
  onUpdate: () => {
    let progressNumber = tl.progress().toFixed(1) * moveDistance;
    let toWhole = Math.round(progressNumber / 100) * 100;
    $(".numbers_list").css("transform", `translateY(${toWhole}%)`);

    currSlide = Math.round(-toWhole / 100);
  }
});
tl.to(".slider_list", {
  xPercent: moveDistance,
  ease: "none"
});
// Control small slider
Observer.create({
  target: window,
  type: "wheel,touch,pointer",
  wheelSpeed: -0.6,
  onChange: (self) => {
    if (popupOpen) return;

    let deltaX = self.deltaX * -0.003;
    let deltaY = self.deltaY * -0.003;
    let currentProgress = tl.progress();
    let newProgress = currentProgress + deltaX;
    if (Math.abs(deltaY) > Math.abs(deltaX)) {
      newProgress = currentProgress + deltaY;
    }
    newProgress = gsap.utils.clamp(0, 1, newProgress);
    gsap.fromTo(
      object,
      {
        value: currentProgress
      },
      {
        value: newProgress,
        duration: 0.2,
        ease: "power2.out",
        onUpdate: () => {
          tl.progress(object.value);
        }
      }
    );
  }
});

// open fullscreen with button when the slider is minified
$(".slider_item").each(function (index) {
  let $elt = $(this);
  $elt.find(".btn-fullscreen").on("click", function () {
    openPopup(index);
  });
});

// Larger slider
function changeSlide(prevSlide, nextSlide, forwards) {
  transitioning = true;
  let mainSlideProgress = nextSlide.index() / (totalSlides - 1);
  tl.progress(mainSlideProgress);
  // vars
  gsap.defaults({ ease: "power1.inOut" });
  let sliderDuration = 1;
  let rotation = 90;
  let moveAmount = 100;
  if (!forwards) {
    rotation = -90;
    moveAmount = -100;
  }
  // animation
  let slider = gsap.timeline({
    onComplete: () => {
      transitioning = false;
    }
  });
  slider
    .set(slides, { display: "none" })
    .set(nextSlide, { display: "block" })
    .set(prevSlide, { display: "block" })
    .fromTo(
      prevSlide.find(".main-slider_title"),
      {
        yPercent: 0
      },
      {
        yPercent: moveAmount * -1,
        duration: sliderDuration / 2
      }
    )
    .fromTo(
      nextSlide.find(".main-slider_title"),
      {
        yPercent: moveAmount
      },
      {
        yPercent: 0,
        duration: sliderDuration / 2
      }
    )
    .fromTo(
      prevSlide.find(".main-slider_img-wrap"),
      {
        xPercent: 0
      },
      {
        xPercent: moveAmount * -1,
        duration: sliderDuration
      },
      0
    )
    .fromTo(
      prevSlide.find(".main-slider_img"),
      {
        xPercent: 0
      },
      {
        xPercent: moveAmount / 2,
        duration: sliderDuration
      },
      0
    )
    .fromTo(
      nextSlide.find(".main-slider_img-wrap"),
      {
        xPercent: moveAmount
      },
      {
        xPercent: 0,
        duration: sliderDuration
      },
      0
    )
    .fromTo(
      nextSlide.find(".main-slider_img"),
      {
        xPercent: (moveAmount / 2) * -1
      },
      {
        xPercent: 0,
        duration: sliderDuration
      },
      0
    );
}
// page load
let slides = $(".main-slider_item");
let navItems = $(".nav_item");
slides.first().addClass("active");
switchNav(navItems.first());

// on click of next slide button
$(".btn-nextslide").on("click", function () {
  if (transitioning === false) {
    let prevSlide = slides.filter(".active");
    let nextSlide = prevSlide.next();
    if (nextSlide.length > 0) {
      prevSlide.removeClass("active");
      nextSlide.addClass("active");
      switchNav(navItems.eq(nextSlide.index()));
      changeSlide(prevSlide, nextSlide, true);
    }
  }
});

// on click of prev slide button
$(".btn-prevslide").on("click", function () {
  if (transitioning === false) {
    let prevSlide = slides.filter(".active");
    let nextSlide = prevSlide.prev();
    if (nextSlide.length > 0) {
      prevSlide.removeClass("active");
      nextSlide.addClass("active");
      switchNav(navItems.eq(nextSlide.index()));
      changeSlide(prevSlide, nextSlide, false);
    }
  }
});

$(".minimizetool").on("click", function () {
  closePopup();
});

// on click of main slider nav
navItems.on("click", function () {
  if (transitioning === false) {
    switchNav($(this));
    let prevSlide = slides.filter(".active");
    let nextSlide = slides.eq($(this).index());
    prevSlide.removeClass("active");
    nextSlide.addClass("active");
    if (prevSlide.index() < nextSlide.index()) {
      changeSlide(prevSlide, nextSlide, true);
    } else {
      changeSlide(prevSlide, nextSlide, false);
    }
  }
});
// switch currently active nav item
function switchNav(currentItem) {
  navItems.removeClass("current");
  currentItem.addClass("current");
}

function closePopup() {
  if (transitioning) return;
  transitioning = true;

  let activeSlide = slides.filter(".active");
  $(".slider_item").removeClass("current");
  let smallSlide = $(".slider_item")
    .eq(activeSlide.index())
    .addClass("current");
  let fromElement = activeSlide.find(".main-slider_img-wrap");
  let toElement = smallSlide.find(".slider_link");

  gsap.defaults({ duration: 0.5, ease: "power1.inOut" });

  gsap.set(".slider_item.current", {
    opacity: 1,
    scale: 1
  });

  let tl2 = gsap.timeline({
    onComplete: () => {
      gsap.set(fromElement, {
        width: "100%",
        height: "100%",
        x: 0,
        y: 0
      });
      $(".slider_wrap").addClass("show");
      gsap.fromTo(
        ".slider_item:not(.current)",
        { opacity: 0, scale: 0.9 },
        {
          opacity: 1,
          scale: 1
        }
      );
      $(".main-slider, .nav_wrap").css("display", "none");
      popupOpen = false;
      transitioning = false;
    }
  });
  tl2
    .fromTo(
      activeSlide.find(".main-slider_title"),
      { yPercent: 0 },
      {
        yPercent: -100
      }
    )
    .to(
      ".main-slider .hero_arrow",
      {
        scale: 0
      },
      0
    )
    .to(
      ".main-slider .minimizetool",
      {
        scale: 0
      },
      0
    )
    .to(
      ".nav_item",
      {
        y: "1.5em",
        opacity: 0,
        duration: 0.3,
        stagger: { each: 0.05, from: activeSlide.index() }
      },
      0
    )
    .to(
      fromElement,
      {
        x: toElement.offset().left - fromElement.offset().left,
        y: toElement.offset().top - fromElement.offset().top,
        width: toElement.innerWidth(),
        height: toElement.innerHeight(),
        duration: 0.8
      },
      0
    );
}

function openPopup(index) {
  if (transitioning) return;
  transitioning = true;

  slides.removeClass("active");
  slides.css("display", "none");

  let activeSlide = slides.eq(index);
  activeSlide.addClass("active");
  activeSlide.css("display", "block");

  $(".slider_item").removeClass("current");
  let smallSlide = $(".slider_item").eq(index);
  let fromElement = activeSlide.find(".main-slider_img-wrap");
  let toElement = smallSlide.find(".slider_link");

  fromElement.css("transform", "");
  activeSlide.find(".main-slider_img").css("transform", "");

  gsap.defaults({ duration: 0.5, ease: "power1.inOut" });

  $(".main-slider, .nav_wrap").css("display", "");

  let tl2 = gsap.timeline({
    onStart: () => {
      gsap.to(".slider_item", {
        opacity: 0,
        scale: 0.9,
        duration: 0.2,
        onComplete: () => {
          $(".slider_wrap").removeClass("show");
        }
      });
    },
    onComplete: () => {
      popupOpen = true;
      transitioning = false;
    }
  });

  tl2
    .fromTo(
      activeSlide.find(".main-slider_title"),
      { yPercent: -100 },
      {
        yPercent: 0
      }
    )
    .to(
      ".main-slider .hero_arrow",
      {
        scale: 1,
        delay: 0.4
      },
      0
    )
    .to(
      ".main-slider .minimizetool",
      {
        scale: 1,
        delay: 0.4
      },
      0
    )
    .to(
      ".nav_item",
      {
        y: "1.5em",
        opacity: 1,
        delay: 0.4,
        duration: 0.3,
        stagger: { each: 0.05, from: activeSlide.index() }
      },
      0
    )
    .fromTo(
      fromElement,
      {
        x: toElement.offset().left - fromElement.offset().left,
        y: toElement.offset().top - fromElement.offset().top,
        width: toElement.innerWidth(),
        height: toElement.innerHeight(),
        xPercent: 0
      },
      {
        width: "100%",
        height: "100%",
        x: 0,
        y: 0,
        xPercent: 0,
        duration: 0.8
      },
      0
    );
}

function openPopupGlobal() {
  openPopup(currSlide);
}

$(".btn-fullscreen-global").on("click", function () {
  openPopupGlobal();
});

$(document).ready(function () {
  const n = $(".numbers_item").length;
  $(".totalprojects").text(n);
});
</script>

